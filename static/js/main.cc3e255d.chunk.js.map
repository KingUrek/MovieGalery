{"version":3,"sources":["data.js","components/Header.jsx","components/SearchBar.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/AddMovie.jsx","components/MovieLibrary.jsx","App.js","serviceWorker.js","index.js"],"names":["movies","title","subtitle","storyline","rating","imagePath","bookmarked","genre","Header","className","React","Component","SearchBar","this","props","searchText","onSearchTextChange","bookmarkedOnly","onBookmarkedChange","selectedGenre","onSelectedGenreChange","style","display","htmlFor","type","value","onChange","checked","Rating","MovieCard","movie","alt","src","MovieList","map","key","AddMovie","state","onChangeHandler","bind","SubmitMovie","generateMovie","nextMovie","previousMovie","event","target","setState","modalClose","onClick","placeholder","id","e","url","document","getElementById","filmName","split","join","fetch","then","results","json","index","console","log","o","querySelector","overview","backdrop_path","profilePath","poster_path","alert","length","ButtonGroup","orientation","color","aria-label","Button","tituloLabel","subtituloLabel","imagemLabel","name","variant","MovieLibrary","modal","addMovie","closeModal","filteredMovies","filter","includes","obj","filterMovies","Modal","open","onClose","marginLeft","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc3e255d.chunk.js","sourcesContent":["const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nexport default class SearchBar extends Component {\n  render() {\n    const {\n      searchText,\n      onSearchTextChange, bookmarkedOnly, onBookmarkedChange, selectedGenre, onSelectedGenreChange,\n    } = this.props;\n    return (\n      <form>\n        <label style={{ display: 'inline-block' }} htmlFor=\"input\">\n          Inclui o texto:\n          <input type=\"text\" value={searchText} onChange={onSearchTextChange} />\n        </label>\n\n        <label style={{ display: 'inline-block' }} htmlFor=\"input\">\n          Mostrar somente favoritos\n          <input type=\"checkbox\" checked={bookmarkedOnly} onChange={onBookmarkedChange} />\n\n        </label>\n\n        <label style={{ display: 'inline-block' }} htmlFor=\"input\">\n          Filtrar por gênero\n          <select value={selectedGenre} onChange={onSelectedGenreChange}>\n            <option value=\"\">Todos</option>\n            <option value=\"action\">Ação</option>\n            <option value=\"comedy\">Comédia</option>\n            <option value=\"thriller\">Suspense</option>\n\n          </select>\n\n        </label>\n\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\">\n        <span className=\"rating\">{rating}</span>\n      </div>\n    );\n  }\n}\n\nexport default Rating;\n","import React from 'react';\n\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n    return (\n      <div className=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={imagePath} />\n        <div className=\"movie-card-body\">\n          <h4 className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <Rating rating={rating} />\n      </div>\n    );\n  }\n}\n\nexport default MovieCard;\n","import React from 'react';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies } = this.props;\n\n    return (\n      <div className=\"movie-list\">\n        {movies.map((movie) => <MovieCard key={movie.title} movie={movie} />)}\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport './AddMovie.css';\n\n\nexport default class AddMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.SubmitMovie = this.SubmitMovie.bind(this);\n    this.generateMovie = this.generateMovie.bind(this);\n    this.nextMovie = this.nextMovie.bind(this);\n    this.previousMovie = this.previousMovie.bind(this);\n  }\n\n  onChangeHandler(event, type) {\n    const { value } = event.target;\n    if (type === 'rating') this.setState({ [type]: +value });\n    else this.setState({ [type]: value });\n  }\n\n  SubmitMovie() {\n    this.props.modalClose();\n    const { onClick } = this.props;\n    onClick(this.state);\n    this.setState({\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n\n    });\n  }\n\n  tituloLabel() {\n    const { title } = this.state;\n    return (\n      <div>\n\n        <label htmlFor=\"input\">\n          Título\n          <input />\n        </label>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          id=\"title\"\n          onChange={(e) => this.onChangeHandler(e, 'title')}\n        />\n      </div>\n    );\n  }\n\n  subtituloLabel() {\n    const { subtitle } = this.state;\n    return (\n      <div>\n        <label htmlFor=\"input\">\n          Subtítulo\n          <input />\n        </label>\n        <input\n          type=\"text\"\n          placeholder=\"Subtitle\"\n          value={subtitle}\n          id=\"subtitle\"\n          onChange={(e) => this.onChangeHandler(e, 'subtitle')}\n        />\n      </div>\n    );\n  }\n\n  imagemLabel() {\n    const { imagePath } = this.state;\n    return (\n      <div>\n\n        <label htmlFor=\"input\">\n          Imagem\n          <input />\n        </label>\n        <input\n          style={{ display: this.url ? 'block' : 'none' }}\n          placeholder=\"Imagem Url\"\n          type=\"text\"\n          value={imagePath}\n          id=\"imagePath\"\n          onChange={(e) => this.onChangeHandler(e, 'imagePath')}\n        />\n      </div>\n    );\n  }\n\n  generateMovie() {\n    const title = document.getElementById('title');\n\n    if (title && title.value) {\n      let filmName = title.value;\n\n      filmName = filmName.split(' ').join('+');\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=22e9ad4abaf918fc1d1d1d5d25707dfe&query=${filmName}`)\n        .then((results) => results.json()).then(({ results }) => {\n          this.setState({ results, index: 0 }); console.log(results); return results[0].id;\n        }).then((id) => {\n          fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=22e9ad4abaf918fc1d1d1d5d25707dfe`).then((e) => e.json()).then((o) => {\n            document.querySelector('.modal-image-div').style.display = 'none';\n            this.setState({\n              title: o.title.split(':')[0],\n              subtitle: o.title.split(':')[1] ? o.title.split(':')[1] : o.title.split(':')[0],\n              storyline: o.overview,\n              imagePath: `https://image.tmdb.org/t/p/w300/${o.backdrop_path}`,\n              profilePath: `https://image.tmdb.org/t/p/w300/${o.poster_path}`,\n            });\n          });\n        });\n    } else {\n      alert('adicione um titulo');\n    }\n  }\n\n  nextMovie() {\n    const { results, index } = this.state;\n    const { id } = results[index + 1];\n    this.setState({ results, index: index + 1 });\n    fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=22e9ad4abaf918fc1d1d1d5d25707dfe`).then((e) => e.json()).then((o) => {\n      this.setState({ title: o.title.split(':')[0], subtitle: o.title.split(':')[1], storyline: o.overview, imagePath: `https://image.tmdb.org/t/p/w300/${o.backdrop_path}`, profilePath: `https://image.tmdb.org/t/p/w300/${o.poster_path}` });\n    });\n  }\n\n  previousMovie() {\n    console.log('bora');\n    const { results, index } = this.state;\n    if (index > 0) {\n      const { id } = results[index - 1];\n      this.setState({ results, index: index - 1 });\n      fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=22e9ad4abaf918fc1d1d1d5d25707dfe`).then((e) => e.json()).then((o) => {\n        this.setState({ title: o.title.split(':')[0], subtitle: o.title.split(':')[1], storyline: o.overview, imagePath: `https://image.tmdb.org/t/p/w300/${o.backdrop_path}`, profilePath: `https://image.tmdb.org/t/p/w300/${o.poster_path}` });\n      });\n    }\n  }\n\n\n  render() {\n    const { storyline, rating, genre, imagePath, results, index } = this.state;\n    return (\n      <div className=\"add-movie-body\">\n\n        <ArrowBackIosIcon style={{ display: results && index != 0 ? 'block' : 'none' }} onClick={this.previousMovie} className=\"arrow left\" />\n        <ArrowForwardIosIcon style={{ display: results && index != results.length - 1 ? 'block' : 'none' }} onClick={this.nextMovie} className=\"arrow rigth\" />\n\n\n        <div className=\"modal-image modal-image-div\">\n          <ButtonGroup className=\"button-wrap\" orientation=\"vertical\" color=\"primary\" aria-label=\"outlined primary button group\">\n            <Button onClick={this.generateMovie}>Generate Film</Button>\n          </ButtonGroup>\n        </div>\n        <img className=\"modal-image \" src={imagePath} alt=\"\" />\n        <form>\n          {this.tituloLabel()}\n          {this.subtituloLabel()}\n          {this.imagemLabel()}\n          <label htmlFor=\"input\">\n            Sinopse\n            <input type=\"text\" />\n          </label>\n          <textarea\n            placeholder=\"Storyline\"\n            value={storyline}\n            id=\"storyline\"\n            onChange={(e) => this.onChangeHandler(e, 'storyline')}\n          />\n          <label htmlFor=\"input\">\n            Avaliação\n            <input type=\"text\" name=\"\" id=\"\" />\n          </label>\n          <input\n            placeholder=\"Rating\"\n            type=\"number\"\n            value={rating}\n            id=\"rating\"\n            onChange={(e) => this.onChangeHandler(e, 'rating')}\n          />\n          <label htmlFor=\"input\">\n            Gênero\n            <input type=\"text\" />\n          </label>\n          <select value={genre} id=\"genre\" onChange={(e) => this.onChangeHandler(e, 'genre')}>\n\n            <option value=\"action\">Ação</option>\n            <option value=\"comedy\">Comédia</option>\n            <option value=\"thriller\">Suspense</option>\n          </select>\n\n          {/* <button style={{ display: 'none' }} type=\"button\" onClick={this.SubmitMovie}>\n            Adicionar filme\n          </button> */}\n          <Button className=\"send-button\" variant=\"contained\" color=\"primary\" onClick={this.SubmitMovie}>\n            Adicionar filme\n          </Button>\n        </form>\n\n      </div>\n\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport AddMovie from './AddMovie';\n\n\nexport default class MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n    const { movies } = this.props;\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies,\n      modal: false,\n    };\n    this.addMovie = this.addMovie.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  filterMovies() {\n    const { searchText, bookmarkedOnly, selectedGenre, movies } = this.state;\n    let filteredMovies = [...movies];\n    if (bookmarkedOnly) {\n      filteredMovies = filteredMovies.filter((e) => e.bookmarked);\n    }\n    if (selectedGenre) {\n      filteredMovies = filteredMovies.filter((e) => e.genre === selectedGenre);\n    }\n    if (searchText) {\n      filteredMovies = filteredMovies.filter((e) => e.title.includes(searchText)\n        || e.subtitle.includes(searchText) || e.storyline.includes(searchText));\n    }\n\n    return filteredMovies;\n  }\n\n  addMovie(obj) {\n    const { movies } = this.state;\n    this.setState({ movies: [...movies, obj] });\n  }\n\n  closeModal() {\n    console.log('fechou o modal');\n    this.setState({ modal: false });\n  }\n\n  render() {\n    const { searchText, bookmarkedOnly, selectedGenre, modal } = this.state;\n    return (\n      <div>\n        <SearchBar\n          searchText={searchText}\n          bookmarkedOnly={bookmarkedOnly}\n          selectedGenre={selectedGenre}\n          onSearchTextChange={(event) => this.setState({ searchText: event.target.value })}\n          onBookmarkedChange={(event) => this.setState({ bookmarkedOnly: event.target.checked })}\n          onSelectedGenreChange={(event) => this.setState({ selectedGenre: event.target.value })}\n        />\n        <MovieList movies={this.filterMovies()} />\n        <Modal\n          open={modal}\n          onClose={() => this.setState({ modal: false })}\n        >\n          <AddMovie onClick={this.addMovie} modalClose={this.closeModal} />\n\n        </Modal>\n        <Button style={{ marginLeft: '20px' }} variant=\"contained\" color=\"primary\" onClick={() => this.setState({ modal: true })}>\n          Create New Card\n        </Button>\n\n\n      </div>\n\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport movies from './data';\n\nimport Header from './components/Header';\nimport MovieLibrary from './components/MovieLibrary';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MovieLibrary movies={movies} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}